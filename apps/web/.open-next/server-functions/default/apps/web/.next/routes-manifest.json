{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [],
  "headers": [],
  "dynamicRoutes": [
    {
      "page": "/docs/[[...slug]]",
      "regex": "^/docs(?:/(.+?))?(?:/)?$",
      "routeKeys": {
        "nxtPslug": "nxtPslug"
      },
      "namedRegex": "^/docs(?:/(?<nxtPslug>.+?))?(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/analytics",
      "regex": "^/analytics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/analytics(?:/)?$"
    },
    {
      "page": "/manifest.webmanifest",
      "regex": "^/manifest\\.webmanifest(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/manifest\\.webmanifest(?:/)?$"
    },
    {
      "page": "/new",
      "regex": "^/new(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/new(?:/)?$"
    },
    {
      "page": "/robots.txt",
      "regex": "^/robots\\.txt(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/robots\\.txt(?:/)?$"
    },
    {
      "page": "/showcase",
      "regex": "^/showcase(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/showcase(?:/)?$"
    },
    {
      "page": "/sitemap.xml",
      "regex": "^/sitemap\\.xml(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/sitemap\\.xml(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": [
    {
      "source": "/ingest/static/:path*",
      "destination": "https://us-assets.i.posthog.com/static/:path*",
      "regex": "^/ingest/static(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/ingest/:path*",
      "destination": "https://us.i.posthog.com/:path*",
      "regex": "^/ingest(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    },
    {
      "source": "/ingest/decide",
      "destination": "https://us.i.posthog.com/decide",
      "regex": "^/ingest/decide(?:/)?$"
    }
  ]
}